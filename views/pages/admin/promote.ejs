<%- include('../../partials/header') %>

<div class="page-content">
    <div class="page-header">
        <h1>Student Promotion</h1>
        <div class="session-info">
            <% if (activeSession) { %>
                <span class="session-badge">
                    <%= activeSession.sessionName %> - <%= activeSession.current Term %>
                </span>
            <% } %>
        </div>
    </div>
    
    <% if (locals.error) { %>
        <div class="alert alert-error">
            <i class="fas fa-exclamation-triangle"></i>
            <%= error %>
        </div>
    <% } %>
    
    <% if (locals.query && query.success) { %>
        <div class="alert alert-success">
            <i class="fas fa-check-circle"></i>
            <%= query.success %>
        </div>
    <% } %>
    
    <% if (locals.query && query.error) { %>
        <div class="alert alert-error">
            <i class="fas fa-exclamation-triangle"></i>
            <%= query.error %>
        </div>
    <% } %>
    
    <% if (activeSession && activeSession.currentTerm === 'Third Term') { %>
        <div class="promotion-container">
            <div class="promotion-info">
                <div class="info-card">
                    <h3>Promotion Guidelines</h3>
                    <ul>
                        <li>Student promotion is only available during Third Term</li>
                        <li>Select students to promote and their new class</li>
                        <li>Previous session records will be archived</li>
                        <li>Students will be moved to the new session automatically</li>
                    </ul>
                </div>
            </div>
            
            <form method="POST" action="/admin/promote" class="promotion-form">
                <div class="form-section">
                    <h2>Select Students for Promotion</h2>
                    
                    <div class="filters">
                        <div class="filter-group">
                            <label for="filterClass">Filter by Current Class:</label>
                            <select id="filterClass" onchange="filterStudents()">
                                <option value="">All Classes</option>
                                <% const uniqueClasses = [...new Set(students.map(s => s.currentClass))]; %>
                                <% uniqueClasses.forEach(className => { %>
                                    <option value="<%= className %>"><%= className %></option>
                                <% }) %>
                            </select>
                        </div>
                        
                        <div class="filter-group">
                            <label for="newClass">Promote to Class:</label>
                            <select id="newClass" name="newClass" required>
                                <option value="">Select New Class</option>
                                <% classes.forEach(cls => { %>
                                    <option value="<%= cls.className %>"><%= cls.className %></option>
                                <% }) %>
                            </select>
                        </div>
                    </div>
                    
                    <div class="students-selection">
                        <div class="selection-header">
                            <label>
                                <input type="checkbox" id="selectAll"> Select All Visible Students
                            </label>
                            <span id="selectedCount">0 students selected</span>
                        </div>
                        
                        <div class="students-grid">
                            <% students.forEach(student => { %>
                                <div class="student-card" data-class="<%= student.currentClass %>">
                                    <label class="student-checkbox">
                                        <input type="checkbox" name="studentIds" value="<%= student._id %>">
                                        <div class="student-info">
                                            <img src="<%= student.passportURL %>" alt="<%= student.fullName %>" class="student-photo">
                                            <div class="student-details">
                                                <h4><%= student.fullName %></h4>
                                                <p>ID: <%= student.studentID %></p>
                                                <p>Current: <%= student.currentClass %></p>
                                            </div>
                                        </div>
                                    </label>
                                </div>
                            <% }) %>
                        </div>
                    </div>
                </div>
                
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary" id="promoteBtn" disabled>
                        <i class="fas fa-level-up-alt"></i> Promote Selected Students
                    </button>
                </div>
            </form>
        </div>
    <% } else { %>
        <div class="promotion-unavailable">
            <div class="unavailable-icon">
                <i class="fas fa-calendar-times"></i>
            </div>
            <h2>Promotion Not Available</h2>
            <p>Student promotion is only available during the Third Term of an active academic session.</p>
            <% if (activeSession) { %>
                <p>Current Term: <strong><%= activeSession.currentTerm %></strong></p>
                <p>Please wait until Third Term to promote students.</p>
            <% } else { %>
                <p>No active session found. Please activate a session first.</p>
            <% } %>
        </div>
    <% } %>
</div>

<style>
.promotion-container {
    display: grid;
    gap: 2rem;
}

.promotion-info {
    background: var(--white);
    padding: 1.5rem;
    border-radius: 0.5rem;
    box-shadow: var(--shadow);
}

.info-card h3 {
    color: var(--primary-color);
    margin-bottom: 1rem;
}

.info-card ul {
    list-style-type: none;
    padding: 0;
}

.info-card li {
    padding: 0.5rem 0;
    border-bottom: 1px solid var(--light-gray);
    position: relative;
    padding-left: 1.5rem;
}

.info-card li:before {
    content: 'âœ“';
    position: absolute;
    left: 0;
    color: var(--success-color);
    font-weight: bold;
}

.promotion-form {
    background: var(--white);
    padding: 2rem;
    border-radius: 0.5rem;
    box-shadow: var(--shadow);
}

.filters {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    margin-bottom: 2rem;
    padding: 1rem;
    background: var(--light-gray);
    border-radius: 0.375rem;
}

.filter-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
}

.students-selection {
    margin-top: 2rem;
}

.selection-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    padding: 1rem;
    background: var(--light-gray);
    border-radius: 0.375rem;
}

.selection-header label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
}

#selectedCount {
    color: var(--primary-color);
    font-weight: 500;
}

.students-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1rem;
    max-height: 400px;
    overflow-y: auto;
    padding: 1rem;
    border: 1px solid var(--medium-gray);
    border-radius: 0.375rem;
}

.student-card {
    border: 1px solid var(--medium-gray);
    border-radius: 0.375rem;
    transition: all 0.2s;
}

.student-card:hover {
    border-color: var(--primary-color);
    box-shadow: var(--shadow);
}

.student-checkbox {
    display: block;
    cursor: pointer;
    padding: 1rem;
}

.student-checkbox input[type="checkbox"] {
    position: absolute;
    opacity: 0;
}

.student-checkbox input[type="checkbox"]:checked + .student-info {
    background: var(--light-gray);
    border-color: var(--primary-color);
}

.student-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.2s;
}

.student-photo {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    object-fit: cover;
}

.student-details h4 {
    margin: 0 0 0.25rem 0;
    color: var(--primary-color);
}

.student-details p {
    margin: 0;
    font-size: 0.875rem;
    color: var(--secondary-color);
}

.promotion-unavailable {
    text-align: center;
    padding: 4rem 2rem;
    background: var(--white);
    border-radius: 0.5rem;
    box-shadow: var(--shadow);
}

.unavailable-icon {
    font-size: 4rem;
    color: var(--warning-color);
    margin-bottom: 1rem;
}

.promotion-unavailable h2 {
    color: var(--primary-color);
    margin-bottom: 1rem;
}

.promotion-unavailable p {
    color: var(--secondary-color);
    margin-bottom: 0.5rem;
}

.session-badge {
    background: var(--primary-color);
    color: var(--white);
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
}

@media (max-width: 768px) {
    .filters {
        grid-template-columns: 1fr;
    }
    
    .students-grid {
        grid-template-columns: 1fr;
    }
    
    .selection-header {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const selectAllCheckbox = document.getElementById('selectAll');
    const studentCheckboxes = document.querySelectorAll('input[name="studentIds"]');
    const selectedCountSpan = document.getElementById('selectedCount');
    const promoteBtn = document.getElementById('promoteBtn');
    const newClassSelect = document.getElementById('newClass');
    
    // Update selected count and button state
    function updateSelection() {
        const checkedBoxes = document.querySelectorAll('input[name="studentIds"]:checked');
        const count = checkedBoxes.length;
        
        selectedCountSpan.textContent = `${count} student${count !== 1 ? 's' : ''} selected`;
        promoteBtn.disabled = count === 0 || !newClassSelect.value;
        
        // Update select all checkbox state
        const visibleCheckboxes = Array.from(studentCheckboxes).filter(cb => 
            cb.closest('.student-card').style.display !== 'none'
        );
        const visibleCheckedBoxes = visibleCheckboxes.filter(cb => cb.checked);
        
        selectAllCheckbox.checked = visibleCheckboxes.length > 0 && visibleCheckedBoxes.length === visibleCheckboxes.length;
        selectAllCheckbox.indeterminate = visibleCheckedBoxes.length > 0 && visibleCheckedBoxes.length < visibleCheckboxes.length;
    }
    
    // Select all functionality
    selectAllCheckbox.addEventListener('change', function() {
        const visibleCheckboxes = Array.from(studentCheckboxes).filter(cb => 
            cb.closest('.student-card').style.display !== 'none'
        );
        
        visibleCheckboxes.forEach(checkbox => {
            checkbox.checked = this.checked;
        });
        
        updateSelection();
    });
    
    // Individual checkbox change
    studentCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', updateSelection);
    });
    
    // New class selection
    newClassSelect.addEventListener('change', updateSelection);
    
    // Filter students by class
    window.filterStudents = function() {
        const filterClass = document.getElementById('filterClass').value;
        const studentCards = document.querySelectorAll('.student-card');
        
        studentCards.forEach(card => {
            const studentClass = card.dataset.class;
            if (!filterClass || studentClass === filterClass) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
                // Uncheck hidden students
                const checkbox = card.querySelector('input[name="studentIds"]');
                checkbox.checked = false;
            }
        });
        
        updateSelection();
    };
    
    // Form submission confirmation
    document.querySelector('.promotion-form').addEventListener('submit', function(e) {
        const checkedBoxes = document.querySelectorAll('input[name="studentIds"]:checked');
        const newClass = newClassSelect.value;
        
        if (checkedBoxes.length === 0) {
            e.preventDefault();
            alert('Please select at least one student to promote.');
            return;
        }
        
        if (!newClass) {
            e.preventDefault();
            alert('Please select a class to promote students to.');
            return;
        }
        
        const confirmMessage = `Are you sure you want to promote ${checkedBoxes.length} student(s) to ${newClass}?\n\nThis action will:\n- Move students to the new class\n- Archive their current session records\n- Update their session to the active session\n\nThis action cannot be undone.`;
        
        if (!confirm(confirmMessage)) {
            e.preventDefault();
        }
    });
    
    // Initial update
    updateSelection();
});
</script>

<%- include('../../partials/footer') %>